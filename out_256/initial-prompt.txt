We're building a RESTful API for managing customer data. 
Customers will have uuid, email, username, createdAt, updatedAt fields.
We will update an in-memory db on create, update and delete requests.
We will use Fastapi, unittest and uuidv7 time-ordered UUID.
We will handle POST and GET requests to /customer and GET, PUT, DELETE /customer/:uuid requests.
We must make sure the fastapi app has all of the routes defined correctly.
We must create separate pydantic classes for the db entity, the request body and the response body for each endpoint.
We must test the body response data before we test http status codes in unit tests, this is vitally important.
We will run each test individually as we go to prove the api works as expected.
We must prove the api endpoint works by running our unittest testing suite. 
We must never run the server directly, this is very important. 
We must not create a venv or any other virtual environment.
We will use black for linting the project
Start by planning the application step by step, then implement each step.